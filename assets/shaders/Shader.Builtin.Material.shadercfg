# Using TOML as base of the sahder configuration
# Different extension to determine which Go structure to invoke to populate the data

version = "1.0"
name = "Shader.Builtin.Material"
renderpass = "Renderpass.Builtin.World"
stages = ["vertex", "fragment"]
stagefiles = ["shaders/Builtin.MaterialShader.vert.spv", "shaders/Builtin.MaterialShader.frag.spv"]
use_instance = true
use_local = true

# Attributes
[[attribute]]
type = "vec3"
name = "in_position"

[[attribute]]
type = "vec3"
name = "in_normal"

[[attribute]]
type = "vec2"
name = "in_texcoord"

[[attribute]]
type = "vec4"
name = "in_colour"

[[attribute]]
type = "vec3"
name = "in_tangent"

# Uniforms
# Scope: 0=global, 1=instance, 2=local
[[uniform]]
type = "mat4"
scope = 0
name = "projection"

[[uniform]]
type = "mat4"
scope = 0
name = "view"

[[uniform]]
type = "vec4"
scope = 0
name = "ambient_colour"

[[uniform]]
type = "vec3"
scope = 0
name = "view_position"

[[uniform]]
type = "u32"
scope = 0
name = "mode"

[[uniform]]
type = "vec4"
scope = 1
name = "diffuse_colour"

[[uniform]]
type = "samp"
scope = 1
name = "diffuse_texture"

[[uniform]]
type = "samp"
scope = 1
name = "specular_texture"

[[uniform]]
type = "samp"
scope = 1
name = "normal_texture"

[[uniform]]
type = "f32"
scope = 1
name = "shininess"

[[uniform]]
type = "mat4"
scope = 2
name = "model"

